pipeline {
    agent { label 'agent1' }  

    tools {
        maven "M3"
    }
    environment {
        NEXUS_URL = "${NEXUS_URL}" 
        GITHUB_CREDENTIAL_ID = "${GITHUB_CREDENTIAL_ID}"
        DOCKER_USERNAME = "${DOCKER_USERNAME}"
        DOCKER_PASSWORD = "${DOCKER_PASSWORD}"
    }

    stages {
        stage("Maven Test and Build"){
            steps{
                sh "mvn clean package"
            }
        }
        stage("Increment artifact version and update POM"){
            steps{
                sh "mvn validate -DbumpMinor"           
                withCredentials([usernamePassword(credentialsId: $GITHUB_CREDENTIAL_ID, passwordVariable: 'pass', usernameVariable: 'user')]) {
                    sh "git add pom.xml"
                    sh "git commit -m \"Increment pom.xml\""
                    sh "git push"
                }
            }
        }
        stage("Push Maven Snapshot to Nexus repository") {
            steps{
                sh "mvn deploy -Dmaven.test.skip=true"
            }
        }
        stage("Docker Build and Tag"){
            steps{
                sh "VERSION=\$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" 
                sh "docker image build -t $NEXUS_URL/petclinic:$VERSION ."
            }
        }
        stage("Push Docker image to Nexus repository") {
            steps{
                sh "docker login $NEXUS_URL -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD"
                sh "docker push $NEXUS_URL/petclinic --all-tags"
            }
        }
        stage("Prune local Docker images") {
            steps{
                sh "docker image prune -a"
            }
        }
        stage("Trigger deploy job"){
            steps{
                 build job: 'petclinic-deploy', parameters:[string(name: 'version', value: '$VERSION')] , wait: false
            }
        }
    }
    post {
        success {
            slackSend color: "good", message:"Build successful - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
        failure {
            slackSend color: "danger", message:"Build failed  - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
    }
}
